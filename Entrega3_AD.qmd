---
title: "Entrega 3 Análisis de Datos"
format: html
editor: visual
author: Irene LiFeng Julià Pérez y Xisco Ribera Ramis
---


# Presentación del problema

Vamos a tratar una base de datos relacionados con la predicción de riesgo de ataque cardíaco. Este hecho es un problema que afecta a un gran porcentaje de la población mundial y es de interés poder predecir esta dolencia.


Nuestro objetivo para este estudio sería:
1.  Estudiar algunos perfiles con riesgo de padecer un ataque al corazón
2.  Comprobar si hay diferencias entre diferentes continentes respecto al mismo perfil de riesgo.
3.  Poder predecir si un individuo tiene riesgo de sufrir un ataque al corazón.


Los datos provienen de la página web Kaggle:
[Kaggle - Heart Attack Prediction](https://www.kaggle.com/datasets/iamsouravbanerjee/heart-attack-prediction-dataset).

El dataset consta de 8763 muestras, donde cada una representa una serie de características de un paciente. A cada paciente se le atribuyen 26 valores, uno de ellos es su ID, y el resto son variables relacionadas con la salud cardíaca, tanto geográficas como de hábitos personales.

Antes de explicar cada variable, modifiquemos la tabla de datos para tenerla limpia en formato tidy.

Cargamos la librerías que utilizaremos

```{r, warning=FALSE, message=FALSE}
library(tidyverse)
library(dplyr)
library(GGally)
library(psych)
library(skimr)
```

# Convertir los datos en tidy

Cargamos la tabla de datos y la convertimos a tibble para facilitarnos la manipulación.

```{r, warning=FALSE}
datos = read.csv("heart_attack_prediction_dataset.csv", header = T)
datos = datos %>% as.tibble
```

Vamos a modificar el data set para que sea más cómodo a la hora de trabajar con él.
Empezamos por cambiar el ID del paciente por una enumeración básica.

```{r}
datos = datos %>% 
  mutate(Patient.ID = c(1:8763))
```


Transformamos las variables qualitativas en factor y, en las binarias (0: No, 1: Si) cambiamos los valores para que sea más ilustrativa y entendible:

```{r}
datos = datos %>% 
  mutate(Sex = Sex %>% as.factor)

datos = datos %>% 
  mutate(Diet = Diet %>% as.factor)

datos = datos %>% 
  mutate(Country = Country %>% as.factor)

datos = datos %>% 
  mutate(Continent = Continent %>% as.factor)

datos = datos %>% 
  mutate(Hemisphere = Hemisphere %>% as.factor)

datos = datos %>% 
  mutate(Diabetes = if_else(Diabetes == 0, "No", "Si") %>% as.factor)

datos = datos %>% 
  mutate(Family.History = if_else(Family.History == 0, "No", "Si") %>% as.factor)

datos = datos %>% 
  mutate(Smoking = if_else(Smoking == 0, "No", "Si") %>% as.factor)

datos = datos %>% 
  mutate(Obesity = if_else(Obesity == 0, "No", "Si") %>% as.factor)

datos = datos %>% 
  mutate(Alcohol.Consumption = if_else(Alcohol.Consumption == 0, "No", "Si") %>% as.factor)

datos = datos %>% 
  mutate(Previous.Heart.Problems = if_else(Previous.Heart.Problems == 0, "No", "Si") %>% as.factor)

datos = datos %>% 
  mutate(Medication.Use = if_else(Medication.Use == 0, "No", "Si") %>% as.factor)

datos = datos %>% 
  mutate(Heart.Attack.Risk = if_else(Heart.Attack.Risk == 0, "No", "Si") %>% as.factor)
```

El siguiente paso va a ser separar la variable qualitativa Blood.Pressure en dos nuevas variables, ésta vez cuantitativas, ya que la presión arterial está representada como un símbolo que equivale a la presión alta y la baja separadas por una barra:

```{r}
# vamos a convertir la columna blood.pressure en high y low
datos <- datos %>%
  rowwise() %>%
  mutate(
    High.Blood.Pressure = as.numeric(unlist(strsplit(Blood.Pressure, "/"))[1]),
    Low.Blood.Pressure = as.numeric(unlist(strsplit(Blood.Pressure, "/"))[2])
  ) %>%
  ungroup()
```

La variable edad es conveniente tenerla estratificada en varios niveles ya que no vamos a poder sacar conclusiones si consideramos cada edad individualmente:







Por último, vamos a eliminar las variables que consideramos que no van a ser concluyentes para el estudio, en este caso, eliminamos la variable Income (nivel de ingresos del paciente) y la variable que anteriormente separamos en dos:
```{r}
datos <- datos[,c(-5,-18)]
```


En este punto, tenemos la tabla de datos con la información que queremos estudiar, reordenemos las columnas para finalizar la conversión a tidy data:

```{r}

datos <- datos %>%
  relocate(where(is.factor)) %>% 
  relocate(Patient.ID)

# 1 id
# 2-14 qual
# 15-26 quant
```


Veamos como se estructuran nuestros datos:

```{r}
str(datos)
```


# Variables


```{r}
skim(datos)
```


Vamos a crear una tabla con la información de cada variable:

```{r}
# Separamos los datos en variables cuantitativas y cualitativas
datos_quant <- datos[,c(15:26)]
datos_qual <- datos[,c(2:14)]

# Cuantitativas

Media = colMeans(datos_quant)

rango <- function(x){
  return(max(x)-min(x))
}
Rango = round(apply(datos_quant, FUN = rango, MARGIN = 2), 3)

# algo aixi, pero mes ben fet:

tabla = data.frame(Media, Rango)
tabla
```



::: center
| qualitat                   |           Quantit           |
|:---------------------------|:---------------------------:|
|                            |                             |
| `r names(datos[,c(2:14)])` | `r names(datos[,c(15:26)])` |
:::

```{r}
summary(datos)
```



# Análisis multivariante exploratorio

```{r, warning=FALSE, cache=TRUE}

a = datos %>% 
  select(2,6,12,14,15,16,17) %>% 
  na.omit

pairs(a, col = c("red", "blue", "green", "yellow", "purple", "orange")[as.integer(a$Continent)],pch=18)



ggpairs(a)
```





## Estimación del vector de medias y la matriz de covarianza y correlación

Calculemos el vector de medias. Para cada variable cuantitativa

```{r}

apply(datos[,15:26], FUN = mean, MARGIN = 2)
```


Veamos ahora la matriz de covariancia (a secas)
```{r}
new_names = substr(names(datos[,c(15:26)]),1,5)
colnames(datos_quant) = new_names


n = length(datos$Patient.ID)

round(cov(datos_quant)*(n-1)/n,5)
```


```{r}

corPlot(datos_quant, cex = 0.8,  main = "Matriz de correlación")
```




Separemos las variables en función de diferentes edades, ya que no hemos observado ningua correlación, ni ninguna dependencia. Nosotros suponemos que la edad sí que es un factor clave a la hora de ser un individuo de riesgo.

## Segregación por edades

```{r}
datos_menores_30 <- datos %>% 
  filter(Age < 30) %>%
  select(15:26)
colnames(datos_menores_30)=new_names
corPlot(datos_menores_30, cex = 0.8,  main = "Matriz de correlación de individuos menores de 30 años")
```


```{r}
datos_30_40 <- datos %>% 
  filter(Age >= 30) %>% 
  filter(Age < 40) %>%
  select(15:26)
colnames(datos_30_40)=new_names
corPlot(datos_30_40, cex = 0.8,  main = "Matriz de correlación de individuos de entre 30 y 40 años")
```


```{r}
datos_40_50 <- datos %>% 
  filter(Age >= 40) %>% 
  filter(Age < 50) %>%
  select(15:26)
colnames(datos_40_50)=new_names
corPlot(datos_40_50, cex = 0.8,  main = "Matriz de correlación de individuos de entre 40 y 50 años")
```


```{r}
datos_50_60 <- datos %>% 
  filter(Age >= 50) %>% 
  filter(Age < 60) %>%
  select(15:26)
colnames(datos_50_60)=new_names
corPlot(datos_50_60, cex = 0.8,  main = "Matriz de correlación de individuos de entre 50 y 60 años")
```


```{r}
datos_60_70 <- datos %>% 
  filter(Age >= 60) %>% 
  filter(Age < 70) %>%
  select(15:26)
colnames(datos_60_70)=new_names
corPlot(datos_60_70, cex = 0.8,  main = "Matriz de correlación de individuos de entre 60 y 70 años")
```


```{r}
datos_70_80 <- datos %>% 
  filter(Age >= 70) %>% 
  filter(Age < 80) %>%
  select(15:26)
colnames(datos_70_80)=new_names
corPlot(datos_70_80, cex = 0.8,  main = "Matriz de correlación de individuos de entre 70 y 80 años")
```


```{r}
datos_80_90 <- datos %>% 
  filter(Age >= 80) %>% 
  filter(Age <= 90) %>%
  select(15:26)
colnames(datos_80_90)=new_names
corPlot(datos_80_90, cex = 0.8,  main = "Matriz de correlación de individuos de entre 80 y 90 años")
```


```{r, eval=FALSE}
datos_adultos <- datos %>% 
  filter(Age >= 30) %>% 
  filter(Age <= 60) %>%
  select(15:26)
colnames(datos_adultos)=new_names
corPlot(datos_adultos, cex = 0.8,  main = "Matriz de correlación de individuos de entre 30 y 60 años")
```

Notemos que no hay mucha diferencia entre la edad de los individuos.

```{r}
#prop.table(table(datos_30_40$Heart.Attack.Risk))
```


## Segregación por continentes

Veamos si hay diferencias entre los continentes en los que habitan:


```{r}
datos_Africa <- datos %>% 
  filter(Continent == "Africa") %>%
  select(15:26)
colnames(datos_Africa)=new_names
corPlot(datos_Africa, cex = 0.8,  main = "Matriz de correlación de individuos de Àfrica")
```

```{r}
datos_Asia <- datos %>% 
  filter(Continent == "Asia") %>%
  select(15:26)
colnames(datos_Asia)=new_names
corPlot(datos_Asia, cex = 0.8,  main = "Matriz de correlación de individuos de Asia")
```

```{r}
datos_Australia <- datos %>% 
  filter(Continent == "Australia") %>%
  select(15:26)
colnames(datos_Australia)=new_names
corPlot(datos_Australia, cex = 0.8,  main = "Matriz de correlación de individuos de Australia")
```

```{r}
datos_Europa <- datos %>% 
  filter(Continent == "Europe") %>%
  select(15:26)
colnames(datos_Europa)=new_names
corPlot(datos_Europa, cex = 0.8,  main = "Matriz de correlación de individuos de Europa")
```

```{r}
datos_SAmerica <- datos %>% 
  filter(Continent == "South America") %>%
  select(15:26)
colnames(datos_SAmerica)=new_names
corPlot(datos_SAmerica, cex = 0.8,  main = "Matriz de correlación de individuos de Sud América")
```


```{r}
datos_NAmerica <- datos %>% 
  filter(Continent == "North America") %>%
  select(15:26)
colnames(datos_NAmerica)=new_names
corPlot(datos_NAmerica, cex = 0.8,  main = "Matriz de correlación de individuos de Norte América")
```


Tampoco observamos ninguna dependencia entre las variables cuantitativas.

## Segregación por sexo de cada rango de edad

```{r}
datos_menores_30_M <- datos %>% 
  filter(Age < 30) %>%
  filter(Sex == "Male") %>% 
  select(15:26)
colnames(datos_menores_30_M)=new_names
corPlot(datos_menores_30_M, cex = 0.8,  main = "Matriz de correlación de hombres menores de 30 años")

datos_menores_30_F <- datos %>% 
  filter(Age < 30) %>%
  filter(Sex == "Female") %>% 
  select(15:26)
colnames(datos_menores_30_F)=new_names
corPlot(datos_menores_30_F, cex = 0.8,  main = "Matriz de correlación de mujeres menores de 30 años")
```


```{r}
datos_30_40_M <- datos %>% 
  filter(Age >= 30) %>% 
  filter(Age < 40) %>%
  filter(Sex == "Male") %>% 
  select(15:26)
colnames(datos_30_40_M)=new_names
corPlot(datos_30_40_M, cex = 0.8,  main = "Matriz de correlación de hombres de entre 30 y 40 años")

datos_30_40_F <- datos %>% 
  filter(Age >= 30) %>% 
  filter(Age < 40) %>%
  filter(Sex == "Female") %>% 
  select(15:26)
colnames(datos_30_40_F)=new_names
corPlot(datos_30_40_F, cex = 0.8,  main = "Matriz de correlación de mujeres de entre 30 y 40 años")
```


```{r}
datos_40_50_M <- datos %>% 
  filter(Age >= 40) %>% 
  filter(Age < 50) %>%
  filter(Sex == "Male") %>%
  select(15:26)
colnames(datos_40_50_M)=new_names
corPlot(datos_40_50_M, cex = 0.8,  main = "Matriz de correlación de hombres de entre 40 y 50 años")

datos_40_50_F <- datos %>% 
  filter(Age >= 40) %>% 
  filter(Age < 50) %>%
  filter(Sex == "Female") %>%
  select(15:26)
colnames(datos_40_50_F)=new_names
corPlot(datos_40_50_F, cex = 0.8,  main = "Matriz de correlación de mujeres de entre 40 y 50 años")
```


```{r}
datos_50_60_M <- datos %>% 
  filter(Age >= 50) %>% 
  filter(Age < 60) %>%
  filter(Sex == "Male") %>% 
  select(15:26)
colnames(datos_50_60_M)=new_names
corPlot(datos_50_60_M, cex = 0.8,  main = "Matriz de correlación de hombres de entre 50 y 60 años")


datos_50_60_F <- datos %>% 
  filter(Age >= 50) %>% 
  filter(Age < 60) %>%
  filter(Sex == "Female") %>% 
  select(15:26)
colnames(datos_50_60_F)=new_names
corPlot(datos_50_60_F, cex = 0.8,  main = "Matriz de correlación de mujeres de entre 50 y 60 años")
```


```{r}
datos_60_70_M <- datos %>% 
  filter(Age >= 60) %>% 
  filter(Age < 70) %>%
  filter(Sex == "Male") %>% 
  select(15:26)
colnames(datos_60_70_M)=new_names
corPlot(datos_60_70_M, cex = 0.8,  main = "Matriz de correlación de hombres de entre 60 y 70 años")

datos_60_70_F <- datos %>% 
  filter(Age >= 60) %>% 
  filter(Age < 70) %>%
  filter(Sex == "Female") %>% 
  select(15:26)
colnames(datos_60_70_F)=new_names
corPlot(datos_60_70_F, cex = 0.8,  main = "Matriz de correlación de mujeres de entre 60 y 70 años")
```


```{r}
datos_70_80_M <- datos %>% 
  filter(Age >= 70) %>% 
  filter(Age < 80) %>%
  filter(Sex == "Male") %>% 
  select(15:26)
colnames(datos_70_80_M)=new_names
corPlot(datos_70_80_M, cex = 0.8,  main = "Matriz de correlación de hombres de entre 70 y 80 años")

datos_70_80_F <- datos %>% 
  filter(Age >= 70) %>% 
  filter(Age < 80) %>%
  filter(Sex == "Female") %>% 
  select(15:26)
colnames(datos_70_80_F)=new_names
corPlot(datos_70_80_F, cex = 0.8,  main = "Matriz de correlación de mujeres de entre 70 y 80 años")
```


```{r}
datos_80_90_M <- datos %>% 
  filter(Age >= 80) %>% 
  filter(Age <= 90) %>%
  filter(Sex == "Male") %>% 
  select(15:26)
colnames(datos_80_90_M)=new_names
corPlot(datos_80_90_M, cex = 0.8,  main = "Matriz de correlación de hombres de entre 80 y 90 años")

datos_80_90_F <- datos %>% 
  filter(Age >= 80) %>% 
  filter(Age <= 90) %>%
  filter(Sex == "Female") %>% 
  select(15:26)
colnames(datos_80_90_F)=new_names
corPlot(datos_80_90_F, cex = 0.8,  main = "Matriz de correlación de mujeres de entre 80 y 90 años")
```


```{r, eval=FALSE}
datos_adultos <- datos %>% 
  filter(Age >= 30) %>% 
  filter(Age <= 60) %>%
  select(15:26)
colnames(datos_adultos)=new_names
corPlot(datos_adultos, cex = 0.8,  main = "Matriz de correlación de individuos de entre 30 y 60 años")
```