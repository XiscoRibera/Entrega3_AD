---
title: "Predicción de Riesgo de Ataque Cardíaco"
format: 
  revealjs:
    smaller: TRUE
    scrollable: TRUE
editor: visual
author: Irene LiFeng Julià Pérez y Xisco Ribera Ramis
---

```{r, warning=FALSE, message=FALSE}
library(tidyverse)
library(dplyr)
library(GGally)
library(psych)
library(skimr)
library(fmsb)
```


### Presentación del problema

- Base de datos relacionados con la predicción de riesgo de ataque cardíaco.

- Fuente: [Kaggle - Heart Attack Prediction](https://www.kaggle.com/datasets/iamsouravbanerjee/heart-attack-prediction-dataset)

<div>
<p style = 'text-align:center;'>
<img src= "Imagen dataset.png" width="600px">
</p>
</div>

##

### Datos unTidy:

```{r, warning=FALSE}
datos = read.csv("heart_attack_prediction_dataset.csv", header = T)
datos = datos %>% as.tibble
str(datos)
```


##

### Convertir datos en Tidy

Transformamos:

- El ID del paciente por una enumeración básica
- Las variables qualitativas en factor
- Las binarias (0: No, 1: Si)

```{r, echo=TRUE}
datos = datos %>% 
  mutate(Patient.ID = c(1:8763))

datos = datos %>% 
  mutate(Sex = Sex %>% as.factor)

datos = datos %>% 
  mutate(Diet = Diet %>% as.factor)

datos = datos %>% 
  mutate(Country = Country %>% as.factor)

datos = datos %>% 
  mutate(Continent = Continent %>% as.factor)

datos = datos %>% 
  mutate(Hemisphere = Hemisphere %>% as.factor)

datos = datos %>% 
  mutate(Diabetes = if_else(Diabetes == 0, "No", "Si") %>% as.factor)

datos = datos %>% 
  mutate(Family.History = if_else(Family.History == 0, "No", "Si") %>% as.factor)

datos = datos %>% 
  mutate(Smoking = if_else(Smoking == 0, "No", "Si") %>% as.factor)

datos = datos %>% 
  mutate(Obesity = if_else(Obesity == 0, "No", "Si") %>% as.factor)

datos = datos %>% 
  mutate(Alcohol.Consumption = if_else(Alcohol.Consumption == 0, "No", "Si") %>% as.factor)

datos = datos %>% 
  mutate(Previous.Heart.Problems = if_else(Previous.Heart.Problems == 0, "No", "Si") %>% as.factor)

datos = datos %>% 
  mutate(Medication.Use = if_else(Medication.Use == 0, "No", "Si") %>% as.factor)

datos = datos %>% 
  mutate(Heart.Attack.Risk = if_else(Heart.Attack.Risk == 0, "No", "Si") %>% as.factor)

datos = datos %>% 
  mutate(Stress.Level = Stress.Level %>% as.factor)
```

##

- Dividimos la variable `Blood.Pressure` en otras dos numéricas, la alta y la baja.

```{r, echo=TRUE}
# vamos a convertir la columna blood.pressure en high y low
datos <- datos %>%
  rowwise() %>%
  mutate(
    High.Blood.Pressure = as.numeric(unlist(strsplit(Blood.Pressure, "/"))[1]),
    Low.Blood.Pressure = as.numeric(unlist(strsplit(Blood.Pressure, "/"))[2])
  ) %>%
  ungroup()
```

- Por último, eliminamos la variable `Blood.Pressure`, y `Income`, ya que


```{r, echo=TRUE}
datos <- datos[,c(-5,-18)]
```

- Reordenemos las columnas para finalizar la conversión a tidy data:

```{r, echo=TRUE}
datos <- datos %>%
  relocate(where(is.factor)) %>% 
  relocate(Patient.ID)
```


##

### Variables

Variables cuantitativas

```{r, echo=FALSE}
# Separamos los datos en variables cuantitativas y cualitativas
datos_quant <- datos %>% 
  select(where(is.numeric)) %>% 
  select(-1)


datos_qual <- datos %>% 
  select(where(is.factor))

# Cuantitativas

Unidad = c("Años", "mg/dl", "lpm", "h", "h", "kg/m^2", "mg/dl", "días", "h", "mm Hg", "mm Hg")

Media = round(colMeans(datos_quant),3)

rango <- function(x){
  return(max(x)-min(x))
}
Rango = round(apply(datos_quant, FUN = rango, MARGIN = 2), 3)
Minimo = round(apply(datos_quant, FUN = min, 2),3)
Maximo = round(apply(datos_quant, FUN = max, 2),3)
Desv = round(apply(datos_quant, FUN = sd, 2), 3)
# algo aixi, pero mes ben fet:

tabla = data.frame(Unidad, Media, Desv, Minimo, Maximo, Rango)
tabla
```


##

Variables cualitativas

```{r, echo=FALSE}
summary(datos_qual)
```



##
### Análisis multivariante exploratorio

Queremos encontrar un perfil de paciente con riesgo

Características numéricas

```{r, echo=FALSE}
# 2 RADARS

datos_quant_riesgo <- datos %>% 
  filter(Heart.Attack.Risk == "Si") %>%
  select(where(is.numeric)) %>% 
  select(-1)

datos_quant_no_riesgo <- datos %>% 
  filter(Heart.Attack.Risk == "No") %>% 
  select(where(is.numeric)) %>% 
  select(-1)

mitjanes1 = colMeans(datos_quant_riesgo)


mitjanes2 = colMeans(datos_quant_no_riesgo)


minims=rep(0,length(mitjanes1))
maxims = pmax(mitjanes1,mitjanes2)


radar1 = data.frame(rbind(round(maxims,2), minims, mitjanes1))

radar2 = data.frame(rbind(round(maxims,2), minims, mitjanes2))

par(mfrow=c(1,2))

radarchart(radar1, axistype = 2,
           pcol = rgb(0.09,0.45,0.8,0.75), 
           pfcol = rgb(0.09,0.45,0.8,0.5), 
           plwd= 4, 
           cglcol = "grey", 
           cglty = 1,
           axislabcol = "grey", 
           cglwd = 0.5, 
           vlcex = 0.8, 
           title = "Riesgo")

radarchart(radar2, axistype = 2,
           pcol = rgb(1, 0.5, 0,0.75), 
           pfcol = rgb(1, 0.5, 0,0.5), 
           plwd= 4, 
           cglcol = "grey", 
           cglty = 1, 
           axislabcol = "grey", 
           cglwd = 1, 
           vlcex = 0.8, 
           title = "NO Riesgo")

```



##

comparamos el riesgo del paciente a padecer un ataque cardíaco con varias variables cualitativas.

- Nivel de estrés

```{r, echo=FALSE}
table(datos$Heart.Attack.Risk, datos$Stress.Level, dnn = c("Riesgo", "Estres"))
```




